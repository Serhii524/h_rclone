make 100% compatible with swift.py?

Make Env vars compatible with st?

Get and put the metadata in the libray (x-object-meta-mtime) when getting and putting a file?

This also puts meta-mtime
https://github.com/gholt/swiftly

As an integer, but it does parse it as a float
subargs.append('x-object-meta-mtime:%d' % getmtime(options.input_))

Need an iterate all objects routine... Could use a channel
- could just be a flag to Objects()

FIXME progress meter would be nice! Do this by wrapping the Reader with a progress bar

Do bandwidth limit by wrapping the Reader too
  Maybe using https://jra-go.googlecode.com/hg/linkio/ which will work for multiple
  uploads or downloads. 
  * code.google.com/p/mxk/go1/flowcontrol - only does one flow at once
Or maybe put into swift library.

Could have an integrity check mode where we check the MD5sums of the local vs the remote

Some stats would be nice!

Windows paths? Do we need to translate / and \?

Make swift timeouts be settable with command line parameters

Add bandwidth limit?  

Make a wrapper in connection which
  * measures bandwidth and reports it
  * limits bandwidth using Reader and Writer
  * for a pool of all individual connectinos
  * does timeouts by setting a limit, seeing whether io has happened
    and resetting it if it has

Check the locking in swift module!

501 not implemented for paths with a ? in them!  Probably need to do some escaping...
 hello? sausage: Failed to read info: HTTP Error: 501: 501 Not Implemented

Need to make directory objects otherwise can't upload an empty directory
  * Or could upload empty directories only?

Make a fs.Errorf and count errors and log them at a different level

Submit chtimes_linux.go to standard library
  * Can also fix Futime which isn't using the syscall under linux
  * Also for all the *bsd so likely they could be fixed too


